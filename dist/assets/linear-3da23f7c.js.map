{"version":3,"file":"linear-3da23f7c.js","sources":["../../node_modules/d3-interpolate/src/numberArray.js","../../node_modules/d3-interpolate/src/array.js","../../node_modules/d3-interpolate/src/date.js","../../node_modules/d3-interpolate/src/object.js","../../node_modules/d3-interpolate/src/value.js","../../node_modules/d3-interpolate/src/round.js","../../node_modules/d3-array/src/ascending.js","../../node_modules/d3-array/src/descending.js","../../node_modules/d3-array/src/bisector.js","../../node_modules/d3-array/src/number.js","../../node_modules/d3-array/src/bisect.js","../../node_modules/d3-array/src/ticks.js","../../node_modules/d3-format/src/precisionFixed.js","../../node_modules/d3-format/src/precisionPrefix.js","../../node_modules/d3-format/src/precisionRound.js","../../node_modules/d3-scale/src/constant.js","../../node_modules/d3-scale/src/number.js","../../node_modules/d3-scale/src/continuous.js","../../node_modules/d3-scale/src/tickFormat.js","../../node_modules/d3-scale/src/linear.js"],"sourcesContent":["export default function(a, b) {\r\n  if (!b) b = [];\r\n  var n = a ? Math.min(b.length, a.length) : 0,\r\n      c = b.slice(),\r\n      i;\r\n  return function(t) {\r\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\r\n    return c;\r\n  };\r\n}\r\n\r\nexport function isNumberArray(x) {\r\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\r\n}\r\n","import value from \"./value.js\";\r\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\r\n\r\nexport default function(a, b) {\r\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\r\n}\r\n\r\nexport function genericArray(a, b) {\r\n  var nb = b ? b.length : 0,\r\n      na = a ? Math.min(nb, a.length) : 0,\r\n      x = new Array(na),\r\n      c = new Array(nb),\r\n      i;\r\n\r\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\r\n  for (; i < nb; ++i) c[i] = b[i];\r\n\r\n  return function(t) {\r\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\r\n    return c;\r\n  };\r\n}\r\n","export default function(a, b) {\r\n  var d = new Date;\r\n  return a = +a, b = +b, function(t) {\r\n    return d.setTime(a * (1 - t) + b * t), d;\r\n  };\r\n}\r\n","import value from \"./value.js\";\r\n\r\nexport default function(a, b) {\r\n  var i = {},\r\n      c = {},\r\n      k;\r\n\r\n  if (a === null || typeof a !== \"object\") a = {};\r\n  if (b === null || typeof b !== \"object\") b = {};\r\n\r\n  for (k in b) {\r\n    if (k in a) {\r\n      i[k] = value(a[k], b[k]);\r\n    } else {\r\n      c[k] = b[k];\r\n    }\r\n  }\r\n\r\n  return function(t) {\r\n    for (k in i) c[k] = i[k](t);\r\n    return c;\r\n  };\r\n}\r\n","import {color} from \"d3-color\";\r\nimport rgb from \"./rgb.js\";\r\nimport {genericArray} from \"./array.js\";\r\nimport date from \"./date.js\";\r\nimport number from \"./number.js\";\r\nimport object from \"./object.js\";\r\nimport string from \"./string.js\";\r\nimport constant from \"./constant.js\";\r\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\r\n\r\nexport default function(a, b) {\r\n  var t = typeof b, c;\r\n  return b == null || t === \"boolean\" ? constant(b)\r\n      : (t === \"number\" ? number\r\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\r\n      : b instanceof color ? rgb\r\n      : b instanceof Date ? date\r\n      : isNumberArray(b) ? numberArray\r\n      : Array.isArray(b) ? genericArray\r\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\r\n      : number)(a, b);\r\n}\r\n","export default function(a, b) {\r\n  return a = +a, b = +b, function(t) {\r\n    return Math.round(a * (1 - t) + b * t);\r\n  };\r\n}\r\n","export default function ascending(a, b) {\n  return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export default function descending(a, b) {\n  return a == null || b == null ? NaN\n    : b < a ? -1\n    : b > a ? 1\n    : b >= a ? 0\n    : NaN;\n}\n","import ascending from \"./ascending.js\";\nimport descending from \"./descending.js\";\n\nexport default function bisector(f) {\n  let compare1, compare2, delta;\n\n  // If an accessor is specified, promote it to a comparator. In this case we\n  // can test whether the search value is (self-) comparable. We can’t do this\n  // for a comparator (except for specific, known comparators) because we can’t\n  // tell if the comparator is symmetric, and an asymmetric comparator can’t be\n  // used to test whether a single value is comparable.\n  if (f.length !== 2) {\n    compare1 = ascending;\n    compare2 = (d, x) => ascending(f(d), x);\n    delta = (d, x) => f(d) - x;\n  } else {\n    compare1 = f === ascending || f === descending ? f : zero;\n    compare2 = f;\n    delta = f;\n  }\n\n  function left(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function right(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) <= 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function center(a, x, lo = 0, hi = a.length) {\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction zero() {\n  return 0;\n}\n","export default function number(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n","import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n","const e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nfunction tickSpec(start, stop, count) {\n  const step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log10(step)),\n      error = step / Math.pow(10, power),\n      factor = error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1;\n  let i1, i2, inc;\n  if (power < 0) {\n    inc = Math.pow(10, -power) / factor;\n    i1 = Math.round(start * inc);\n    i2 = Math.round(stop * inc);\n    if (i1 / inc < start) ++i1;\n    if (i2 / inc > stop) --i2;\n    inc = -inc;\n  } else {\n    inc = Math.pow(10, power) * factor;\n    i1 = Math.round(start / inc);\n    i2 = Math.round(stop / inc);\n    if (i1 * inc < start) ++i1;\n    if (i2 * inc > stop) --i2;\n  }\n  if (i2 < i1 && 0.5 <= count && count < 2) return tickSpec(start, stop, count * 2);\n  return [i1, i2, inc];\n}\n\nexport default function ticks(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  if (!(count > 0)) return [];\n  if (start === stop) return [start];\n  const reverse = stop < start, [i1, i2, inc] = reverse ? tickSpec(stop, start, count) : tickSpec(start, stop, count);\n  if (!(i2 >= i1)) return [];\n  const n = i2 - i1 + 1, ticks = new Array(n);\n  if (reverse) {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) / -inc;\n    else for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) * inc;\n  } else {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) / -inc;\n    else for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) * inc;\n  }\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  return tickSpec(start, stop, count)[2];\n}\n\nexport function tickStep(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  const reverse = stop < start, inc = reverse ? tickIncrement(stop, start, count) : tickIncrement(start, stop, count);\n  return (reverse ? -1 : 1) * (inc < 0 ? 1 / -inc : inc);\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","export default function constants(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function number(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport constant from \"./constant.js\";\nimport number from \"./number.js\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = Array.from(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous() {\n  return transformer()(identity, identity);\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function tickFormat(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport tickFormat from \"./tickFormat.js\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain();\n    var i0 = 0;\n    var i1 = d.length - 1;\n    var start = d[i0];\n    var stop = d[i1];\n    var prestep;\n    var step;\n    var maxIter = 10;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n    \n    while (maxIter-- > 0) {\n      step = tickIncrement(start, stop, count);\n      if (step === prestep) {\n        d[i0] = start\n        d[i1] = stop\n        return domain(d);\n      } else if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n      } else {\n        break;\n      }\n      prestep = step;\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous();\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n"],"names":["numberArray","a","b","n","c","i","t","isNumberArray","x","genericArray","nb","na","value","date","d","object","k","interpolate","constant","number","color","rgb","string","interpolateRound","ascending","descending","bisector","f","compare1","compare2","delta","zero","left","lo","hi","mid","right","center","ascendingBisect","bisectRight","bisect","e10","e5","e2","tickSpec","start","stop","count","step","power","error","factor","i1","i2","inc","ticks","reverse","tickIncrement","tickStep","precisionFixed","exponent","precisionPrefix","precisionRound","max","constants","unit","identity","normalize","clamper","bimap","domain","range","d0","d1","r0","r1","polymap","j","r","copy","source","target","transformer","interpolateValue","transform","untransform","unknown","clamp","piecewise","output","input","rescale","scale","y","interpolateNumber","_","u","continuous","tickFormat","specifier","precision","formatSpecifier","formatPrefix","format","linearish","i0","prestep","maxIter","linear","initRange"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]}